package tuple

/////////////////////////////////////////////////////////////////////////////
// An atom
// - a name for something, an identifier or operator
/////////////////////////////////////////////////////////////////////////////

type Atom struct {
	// TODO include location and source for editors
	Name string
}

/////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////

type Comment struct {
	// TODO include location and source for editors
	Comment string
}

func NewComment(_ ParserContext, token string) Comment {
	return Comment{token}
}

/////////////////////////////////////////////////////////////////////////////
// Tuple
/////////////////////////////////////////////////////////////////////////////

type Tuple struct {
	// TODO include location and source for editors
	List []interface{}
}

func (tuple *Tuple) Append(token interface{}) {
	tuple.List = append(tuple.List, token)
}

func (tuple *Tuple) Length() int {
	return len(tuple.List)
}

func NewTuple() Tuple {
	return Tuple{make([]interface{}, 0)}
}

